name: nf-scil checks
on:
  workflow_call:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1
        # FIXME Flip this off once we get to less than a couple hundred. Adding
        # this so it will only run against changed files. It'll make it much
        # easier to fix these as they come up rather than everything at once.
        with:
          extra_args: ""

  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Prettier
        run: npm install -g prettier@3.1.0

      - name: Run Prettier --check
        run: prettier --check .

  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install editorconfig-checker
        run: npm install -g editorconfig-checker

      - name: Run ECLint check
        run: editorconfig-checker -exclude README.md $(git ls-files | grep -v test)

  nf-test-changes:
    name: nf-test-changes
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.changes.outputs.components }}
      modules: ${{ steps.components.outputs.modules }}
      subworkflows: ${{ steps.components.outputs.subworkflows }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List nf-test files
        id: changes
        uses: adamrtalbot/detect-nf-test-changes@v0.0.3
        with:
          head: ${{ github.sha }}
          base: ${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha }}
          n_parents: 2

      - name: Separate modules and subworkflows
        id: components
        run: |
          echo modules=$(echo '${{ steps.changes.outputs.components }}' | jq -c '. | map(select(contains("modules"))) | map(gsub("modules/nf-scil/"; ""))') >> $GITHUB_OUTPUT
          echo subworkflows=$(echo '${{ steps.changes.outputs.components }}' | jq '. | map(select(contains("subworkflows"))) | map(gsub("subworkflows/nf-scil/"; ""))') >> $GITHUB_OUTPUT

      - name: debug
        run: |
          echo ${{ steps.components.outputs.modules }}
          echo ${{ steps.components.outputs.subworkflows }}

  lint-modules:
    name: lint-modules
    needs: [nf-test-changes]
    if: ${{ (needs.nf-test-changes.outputs.modules != '[]') }}
    strategy:
      fail-fast: false
      matrix:
        module: [
          "${{ fromJson(needs.nf-test-changes.outputs.modules) }}"
        ]
    uses: ./.github/workflows/lint_module.yml
    with:
      type: "module"
      component: ${{ matrix.module }}
    secrets: inherit

  lint-subworkflows:
    name: lint-subworkflows
    needs: [nf-test-changes]
    if: ${{ ( needs.nf-test-changes.outputs.subworkflows != '[]') }}
    strategy:
      fail-fast: false
      matrix:
        subworkflow: [
          "${{ fromJson(needs.nf-test-changes.outputs.subworkflows) }}"
        ]
    uses: ./.github/workflows/lint_module.yml
    with:
      type: "subworkflow"
      component: ${{ matrix.subworkflow }}
    secrets: inherit

  nf-test:
    name: nf-test
    needs: [nf-test-changes]
    if: ${{ ( needs.nf-test-changes.outputs.paths != '[]' ) }}
    strategy:
      fail-fast: false
      matrix:
        path: [ "${{ fromJson(needs.nf-test-changes.outputs.paths) }}" ]
        profile: ["docker"]
        exclude:
          - path: modules/nf-core/nf-test
    uses: ./.github/workflows/nf-test_module.yml
    with:
      profile: ${{ matrix.profile }}
      paths: ${{ matrix.path }}
    secrets: inherit

  confirm-pass:
    runs-on: ubuntu-latest
    needs: [prettier, editorconfig, nf-test-changes, lint-modules, lint-subworkflows, nf-test]
    if: ${{ !cancelled() }}
    steps:
      - name: All tests ok
        if: ${{ success() || !contains(needs.*.result, 'failure') }}
        run: exit 0
      - name: One or more tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: debug-print
        if: ${{ !cancelled() }}
        run: |
          echo "toJSON(needs) = ${{ toJSON(needs) }}"
          echo "toJSON(needs.*.result) = ${{ toJSON(needs.*.result) }}"
