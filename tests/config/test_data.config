
params {
    // Default endpoint provided by nf-core, we keep it here in case sometimes we end up pushing stuff to them
    test_data_base = "https://github.com/scilus/nf-scil/raw/main/.test_data"
    test_data {
        "image" {
            "resample" {
                image = "${params.test_data_base}/main/.test_data/denoising/nlmeans_image.nii.gz"
            }
        }
        "betcrop" {
            "cropvolume" {
                image = "${params.test_data_base}/light/box_3d/box_3d_image.nii.gz"
                mask = "${params.test_data_base}/light/box_3d/box_3d_mask.nii.gz"
            }
            "fslbetcrop" {
                dwi = "${params.test_data_base}/heavy/dwi/dwi.nii.gz"
                bval = "${params.test_data_base}/heavy/dwi/dwi.bval"
                bvec = "${params.test_data_base}/heavy/dwi/dwi.bvec"
            }
            "antsbet" {
                t1 = "${params.test_data_base}/heavy/anat/anat_image.nii.gz"
                template = "${params.test_data_base}/heavy/mni_152/t1_template.nii.gz"
                map = "${params.test_data_base}/heavy/mni_152/t1_brain_probability_map.nii.gz"
            }
        }
        "denoising" {
            "nlmeans" {
                image = "${params.test_data_base}/heavy/anat/anat_image.nii.gz"
                mask = "${params.test_data_base}/heavy/anat/anat_mask.nii.gz"
            }
            "mppca" {
                dwi = "${params.test_data_base}/heavy/dwi/dwi.nii.gz"
            }
        }
        "preproc" {
            "normalize"{
                dwi = "${params.test_data_base}/heavy/dwi/dwi.nii.gz"
                mask = "${params.test_data_base}/heavy/dwi/mask.nii.gz"
                bval = "${params.test_data_base}/heavy/dwi/dwi.bval"
                bvec = "${params.test_data_base}/heavy/dwi/dwi.bvec"
            }
            "n4" {
                dwi = "${params.test_data_base}/heavy/dwi_with_b0/dwi.nii.gz"
                b0 = "${params.test_data_base}/heavy/dwi_with_b0/b0.nii.gz"
                b0_mask = "${params.test_data_base}/heavy/dwi_with_b0/mask.nii.gz"
            }
            "gibbs" {
                dwi = "${params.test_data_base}/heavy/dwi_with_b0/dwi.nii.gz"
            }
        }
        "reconst" {
            "dtimetrics"{
                dwi = "${params.test_data_base}/heavy/dwi/dwi.nii.gz"
                b0mask = "${params.test_data_base}/heavy/dwi/mask.nii.gz"
                bval = "${params.test_data_base}/heavy/dwi/dwi.bval"
                bvec = "${params.test_data_base}/heavy/dwi/dwi.bvec"
            }
            "diffusivitypriors"{
                priors = [
                    "${params.test_data_base}/light/priors/s1__iso_diff.txt",
                    "${params.test_data_base}/light/priors/s1__para_diff.txt",
                    "${params.test_data_base}/light/priors/s2__iso_diff.txt",
                    "${params.test_data_base}/light/priors/s2__para_diff.txt"
                ]
            }
            "frf" {
                dwi = "${params.test_data_base}/heavy/dwi/dwi.nii.gz"
                bval = "${params.test_data_base}/heavy/dwi/dwi.bval"
                bvec = "${params.test_data_base}/heavy/dwi/dwi.bvec"
                mask = "${params.test_data_base}/heavy/dwi/mask.nii.gz"
            }
            "fodf" { // NEEDS TO BE REPLACED WITH SCILPY FETCHER
                dwi = "${params.test_data_base}/reconst/dwi.nii.gz"
                bval = "${params.test_data_base}/reconst/dwi.bval"
                bvec = "${params.test_data_base}/reconst/dwi.bvec"
                b0_mask = "${params.test_data_base}/reconst/b0_mask.nii.gz"
                fa = "${params.test_data_base}/reconst/fa.nii.gz"
                md = "${params.test_data_base}/reconst/md.nii.gz"
                frf = "${params.test_data_base}/reconst/frf.txt"
            }
        }
        "registration" {
            "synthregistration"{
                t1 = "${params.test_data_base}/heavy/anat/anat_image.nii.gz"
                fa = "${params.test_data_base}/heavy/dwi/dwi.nii.gz"
                fs_license = "${params.test_data_base}/heavy/freesurfer/license.txt"
            }
        "segmentation" {
            "freesurferseg" {
                aparc_aseg = "${params.test_data_base}/heavy/freesurfer/aparc_aseg.nii.gz"
                wmparc = "${params.test_data_base}/heavy/freesurfer/wmparc.nii.gz"
            }
            "fastseg" {
                image = "${params.test_data_base}/heavy/anat/anat_image.nii.gz"
            }
        }
        "tracking" {
            "pfttracking" {
                wm = "${params.test_data_base}/main/.test_data/tracking/wm.nii.gz"
                gm = "${params.test_data_base}/main/.test_data/tracking/gm.nii.gz"
                csf = "${params.test_data_base}/main/.test_data/tracking/csf.nii.gz"
                fodf = "${params.test_data_base}/main/.test_data/tracking/fodf.nii.gz"
                fa = "${params.test_data_base}/main/.test_data/tracking/fa.nii.gz"
            }
        }
        "utils" {
            "extractb0" {
                dwi = "${params.test_data_base}/heavy/dwi/dwi.nii.gz"
                bval = "${params.test_data_base}/heavy/dwi/dwi.bval"
                bvec = "${params.test_data_base}/heavy/dwi/dwi.bvec"
            }
        }
    }
}
